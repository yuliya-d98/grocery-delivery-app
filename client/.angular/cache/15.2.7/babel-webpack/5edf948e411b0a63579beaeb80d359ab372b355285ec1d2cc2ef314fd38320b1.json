{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PageLayoutHttpService {\n  constructor(http) {\n    this.http = http;\n  }\n  registration(form) {\n    const body = {\n      query: `\n        mutation createUser($userData: UserInput) {\n          createUser(input: $userData) {\n            email, username, created\n          }\n        }\n      `,\n      variables: {\n        userData: {\n          ...form,\n          created: 1\n        }\n      }\n    };\n    return this.http.post(`http://localhost:4000/graphql`, body, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n}\nPageLayoutHttpService.ɵfac = function PageLayoutHttpService_Factory(t) {\n  return new (t || PageLayoutHttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nPageLayoutHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PageLayoutHttpService,\n  factory: PageLayoutHttpService.ɵfac\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EACvCC,YAAY,CAACC,IAAS;IACpB,MAAMC,IAAI,GAAG;MACXC,KAAK,EAAE;;;;;;OAMN;MACDC,SAAS,EAAE;QAAEC,QAAQ,EAAE;UAAE,GAAGJ,IAAI;UAAEK,OAAO,EAAE;QAAC;MAAE;KAC/C;IACD,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,+BAA+B,EAAEL,IAAI,EAAE;MAChEM,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CAAC;EACJ;;AAlBWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAY,SAArBZ,qBAAqB;AAAA","names":["PageLayoutHttpService","constructor","http","registration","form","body","query","variables","userData","created","post","headers","factory"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\services\\page-layout.http.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport * as process from \"process\";\n\n@Injectable()\nexport class PageLayoutHttpService {\n  constructor(private http: HttpClient) {}\n  registration(form: any) {\n    const body = {\n      query: `\n        mutation createUser($userData: UserInput) {\n          createUser(input: $userData) {\n            email, username, created\n          }\n        }\n      `,\n      variables: { userData: { ...form, created: 1 } },\n    };\n    return this.http.post<any>(`http://localhost:4000/graphql`, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}