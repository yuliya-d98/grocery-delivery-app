{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/page-layout.http.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/tabs\";\nfunction LoginModalComponent_mat_form_field_5_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_mat_form_field_5_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.form.controls[\"username\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_form_field_5_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username should contain from 2 to 30 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_form_field_5_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_form_field_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 10);\n    i0.ɵɵtemplate(4, LoginModalComponent_mat_form_field_5_button_4_Template, 3, 0, \"button\", 7);\n    i0.ɵɵtemplate(5, LoginModalComponent_mat_form_field_5_mat_error_5_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵtemplate(6, LoginModalComponent_mat_form_field_5_mat_error_6_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r0.form.controls[\"username\"].value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls[\"username\"].value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.form.controls[\"username\"].hasError(\"minLength\") || ctx_r0.form.controls[\"username\"].hasError(\"maxLength\")) && !ctx_r0.form.controls[\"username\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls[\"email\"].hasError(\"required\"));\n  }\n}\nfunction LoginModalComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.form.controls[\"email\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.form.controls[\"password\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password should contain from 2 to 30 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginModalComponent {\n  constructor(formBuilder, pageLayoutHttpService) {\n    this.formBuilder = formBuilder;\n    this.pageLayoutHttpService = pageLayoutHttpService;\n    this.selectedTab = 0;\n    this.initForm();\n  }\n  initForm(event) {\n    if (event) {\n      this.selectedTab = event.index;\n    }\n    this.form = this.formBuilder.group({\n      ...(this.selectedTab === 1 && {\n        username: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]]\n      }),\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]]\n    });\n  }\n  login() {\n    console.log(this.form.getRawValue());\n  }\n  registration() {\n    const form = this.form.getRawValue();\n    this.pageLayoutHttpService.registration(form).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: error => console.log(error)\n    });\n  }\n}\nLoginModalComponent.ɵfac = function LoginModalComponent_Factory(t) {\n  return new (t || LoginModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PageLayoutHttpService));\n};\nLoginModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginModalComponent,\n  selectors: [[\"app-login-modal\"]],\n  decls: 22,\n  vars: 12,\n  consts: [[1, \"login-modal\"], [\"animationDuration\", \"0ms\", \"mat-stretch-tabs\", \"\", \"backgroundColor\", \"primary\", \"color\", \"primary\", 3, \"selectedTabChange\"], [\"label\", \"\\u0412\\u043E\\u0439\\u0442\\u0438\"], [\"label\", \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"], [3, \"formGroup\"], [4, \"ngIf\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Ex. pat@example.com\", 3, \"value\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 3, \"value\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Enter your username\", 3, \"value\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n  template: function LoginModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-tab-group\", 1);\n      i0.ɵɵlistener(\"selectedTabChange\", function LoginModalComponent_Template_mat_tab_group_selectedTabChange_1_listener($event) {\n        return ctx.initForm($event);\n      });\n      i0.ɵɵelement(2, \"mat-tab\", 2)(3, \"mat-tab\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 4);\n      i0.ɵɵtemplate(5, LoginModalComponent_mat_form_field_5_Template, 7, 4, \"mat-form-field\", 5);\n      i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, LoginModalComponent_button_10_Template, 3, 0, \"button\", 7);\n      i0.ɵɵtemplate(11, LoginModalComponent_mat_error_11_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(12, LoginModalComponent_mat_error_12_Template, 4, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵtemplate(17, LoginModalComponent_button_17_Template, 3, 0, \"button\", 7);\n      i0.ɵɵtemplate(18, LoginModalComponent_mat_error_18_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(19, LoginModalComponent_mat_error_19_Template, 4, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginModalComponent_Template_button_click_20_listener() {\n        return ctx.selectedTab === 0 ? ctx.login() : ctx.registration();\n      });\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === 1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.form.controls[\"email\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"email\") && !ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.form.controls[\"password\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.form.controls[\"password\"].hasError(\"minLength\") || ctx.form.controls[\"password\"].hasError(\"maxLength\")) && !ctx.form.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.selectedTab === 0 ? \"\\u0412\\u043E\\u0439\\u0442\\u0438\" : \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\", \" \");\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatIcon, i5.MatButton, i5.MatIconButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError, i7.MatSuffix, i1.FormGroupDirective, i1.FormControlName, i8.MatTab, i8.MatTabGroup],\n  styles: [\".login-modal[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.login-modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  padding: 16px;\\n}\\n.login-modal[_ngcontent-%COMP%]     mat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL3BhZ2UtbGF5b3V0L2NvbXBvbmVudHMvbG9naW4tbW9kYWwvbG9naW4tbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7QUFDSjtBQUdJO0VBQ0UsV0FBQTtBQUROIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLW1vZGFsIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgZm9ybSB7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gIH1cclxuXHJcbiAgOjpuZy1kZWVwIHtcclxuICAgIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginModalComponent","constructor","formBuilder","pageLayoutHttpService","initForm","event","selectedTab","index","form","group","username","required","minLength","maxLength","email","password","login","console","log","getRawValue","registration","subscribe","next","data","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.ts","D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\nimport { PageLayoutHttpService } from \"../../services/page-layout.http.service\";\n\n@Component({\n  selector: \"app-login-modal\",\n  templateUrl: \"./login-modal.component.html\",\n  styleUrls: [\"./login-modal.component.scss\"],\n})\nexport class LoginModalComponent {\n  selectedTab: number = 0;\n  form!: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder,\n    private pageLayoutHttpService: PageLayoutHttpService\n  ) {\n    this.initForm();\n  }\n\n  initForm(event?: MatTabChangeEvent) {\n    if (event) {\n      this.selectedTab = event.index;\n    }\n    this.form = this.formBuilder.group({\n      ...(this.selectedTab === 1 && {\n        username: [\n          \"\",\n          [\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(30),\n          ],\n        ],\n      }),\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(30),\n        ],\n      ],\n    });\n  }\n\n  login() {\n    console.log(this.form.getRawValue());\n  }\n  registration() {\n    const form = this.form.getRawValue();\n    (this.pageLayoutHttpService.registration(form) as any).subscribe({\n      next: (data: any) => {\n        console.log(data);\n      },\n      error: (error: any) => console.log(error),\n    });\n  }\n}\n","<div class=\"login-modal\">\n  <mat-tab-group\n    animationDuration=\"0ms\"\n    mat-stretch-tabs\n    backgroundColor=\"primary\"\n    color=\"primary\"\n    (selectedTabChange)=\"initForm($event)\"\n  >\n    <mat-tab label=\"Войти\"> </mat-tab>\n    <mat-tab label=\"Зарегистрироваться\"> </mat-tab>\n  </mat-tab-group>\n  <form [formGroup]=\"form\">\n    <mat-form-field *ngIf=\"selectedTab === 1\">\n      <mat-label>Username</mat-label>\n      <input\n        type=\"text\"\n        [value]=\"form.controls['username'].value\"\n        matInput\n        formControlName=\"username\"\n        placeholder=\"Enter your username\"\n      />\n      <button\n        *ngIf=\"form.controls['username'].value\"\n        matSuffix\n        mat-icon-button\n        aria-label=\"Clear\"\n        (click)=\"form.controls['username'].setValue('')\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-error\n        *ngIf=\"\n          (form.controls['username'].hasError('minLength') ||\n            form.controls['username'].hasError('maxLength')) &&\n          !form.controls['username'].hasError('required')\n        \"\n      >\n        Username should contain from 2 to 30 symbols\n      </mat-error>\n      <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n        Username is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input\n        type=\"email\"\n        [value]=\"form.controls['email'].value\"\n        matInput\n        formControlName=\"email\"\n        placeholder=\"Ex. pat@example.com\"\n      />\n      <button\n        *ngIf=\"form.controls['email'].value\"\n        matSuffix\n        mat-icon-button\n        aria-label=\"Clear\"\n        (click)=\"form.controls['email'].setValue('')\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-error\n        *ngIf=\"\n          form.controls['email'].hasError('email') &&\n          !form.controls['email'].hasError('required')\n        \"\n      >\n        Please enter a valid email address\n      </mat-error>\n      <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n        Email is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Password</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        [value]=\"form.controls['password'].value\"\n        formControlName=\"password\"\n        placeholder=\"Enter your password\"\n      />\n      <button\n        *ngIf=\"form.controls['password'].value\"\n        matSuffix\n        mat-icon-button\n        aria-label=\"Clear\"\n        (click)=\"form.controls['password'].setValue('')\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-error\n        *ngIf=\"\n          (form.controls['password'].hasError('minLength') ||\n            form.controls['password'].hasError('maxLength')) &&\n          !form.controls['password'].hasError('required')\n        \"\n      >\n        Password should contain from 2 to 30 symbols\n      </mat-error>\n      <mat-error *ngIf=\"form.controls['password'].hasError('required')\">\n        Password is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      [disabled]=\"form.invalid\"\n      (click)=\"selectedTab === 0 ? login() : registration()\"\n    >\n      {{ selectedTab === 0 ? \"Войти\" : \"Зарегистрироваться\" }}\n    </button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}