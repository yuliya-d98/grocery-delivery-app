{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/tabs\";\nfunction LoginModalComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.form.controls[\"email\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.form.controls[\"password\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password should contain from 2 to 30 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.form.controls[\"username\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username should contain from 2 to 30 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_button_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_31_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.form.controls[\"email\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_button_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_38_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.form.controls[\"password\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password should contain from 2 to 30 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginModalComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = this.formBuilder.group({\n      username: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]]\n    });\n  }\n  selectedTabChange(event) {\n    console.log(event);\n  }\n}\nLoginModalComponent.ɵfac = function LoginModalComponent_Factory(t) {\n  return new (t || LoginModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginModalComponent,\n  selectors: [[\"app-login-modal\"]],\n  decls: 41,\n  vars: 17,\n  consts: [[1, \"login-modal\"], [\"dynamicHeight\", \"\", \"animationDuration\", \"0ms\", \"mat-stretch-tabs\", \"\", \"backgroundColor\", \"primary\", \"color\", \"primary\", 3, \"selectedTabChange\"], [\"label\", \"\\u0412\\u043E\\u0439\\u0442\\u0438\"], [3, \"formGroup\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Ex. pat@example.com\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\"], [\"label\", \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Enter your username\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n  template: function LoginModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-tab-group\", 1);\n      i0.ɵɵlistener(\"selectedTabChange\", function LoginModalComponent_Template_mat_tab_group_selectedTabChange_1_listener($event) {\n        return ctx.selectedTabChange($event);\n      });\n      i0.ɵɵelementStart(2, \"mat-tab\", 2)(3, \"form\", 3)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, LoginModalComponent_button_8_Template, 3, 0, \"button\", 5);\n      i0.ɵɵtemplate(9, LoginModalComponent_mat_error_9_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(10, LoginModalComponent_mat_error_10_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵtemplate(15, LoginModalComponent_button_15_Template, 3, 0, \"button\", 5);\n      i0.ɵɵtemplate(16, LoginModalComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(17, LoginModalComponent_mat_error_17_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"mat-tab\", 8)(19, \"form\", 3)(20, \"mat-form-field\")(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 9);\n      i0.ɵɵtemplate(24, LoginModalComponent_button_24_Template, 3, 0, \"button\", 5);\n      i0.ɵɵtemplate(25, LoginModalComponent_mat_error_25_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(26, LoginModalComponent_mat_error_26_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\")(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 4);\n      i0.ɵɵtemplate(31, LoginModalComponent_button_31_Template, 3, 0, \"button\", 5);\n      i0.ɵɵtemplate(32, LoginModalComponent_mat_error_32_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(33, LoginModalComponent_mat_error_33_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-form-field\")(35, \"mat-label\");\n      i0.ɵɵtext(36, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 7);\n      i0.ɵɵtemplate(38, LoginModalComponent_button_38_Template, 3, 0, \"button\", 5);\n      i0.ɵɵtemplate(39, LoginModalComponent_mat_error_39_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(40, LoginModalComponent_mat_error_40_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"email\") && !ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.form.controls[\"password\"].hasError(\"minLength\") || ctx.form.controls[\"password\"].hasError(\"maxLength\")) && !ctx.form.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"username\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.form.controls[\"username\"].hasError(\"minLength\") || ctx.form.controls[\"username\"].hasError(\"maxLength\")) && !ctx.form.controls[\"username\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"email\") && !ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.form.controls[\"password\"].hasError(\"minLength\") || ctx.form.controls[\"password\"].hasError(\"maxLength\")) && !ctx.form.controls[\"password\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].hasError(\"required\"));\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatIcon, i4.MatIconButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i1.FormGroupDirective, i1.FormControlName, i7.MatTab, i7.MatTabGroup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginModalComponent","constructor","formBuilder","group","username","required","minLength","maxLength","email","password","selectedTabChange","event","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.ts","D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-login-modal\",\n  templateUrl: \"./login-modal.component.html\",\n  styleUrls: [\"./login-modal.component.scss\"],\n})\nexport class LoginModalComponent {\n  form: FormGroup = this.formBuilder.group({\n    username: [\n      \"\",\n      [Validators.required, Validators.minLength(2), Validators.maxLength(30)],\n    ],\n    email: [\"\", [Validators.required, Validators.email]],\n    password: [\n      \"\",\n      [Validators.required, Validators.minLength(2), Validators.maxLength(30)],\n    ],\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  selectedTabChange(event: any) {\n    console.log(event);\n  }\n}\n","<div class=\"login-modal\">\n  <mat-tab-group\n    dynamicHeight\n    animationDuration=\"0ms\"\n    mat-stretch-tabs\n    backgroundColor=\"primary\"\n    color=\"primary\"\n    (selectedTabChange)=\"selectedTabChange($event)\"\n  >\n    <mat-tab label=\"Войти\">\n      <form [formGroup]=\"form\">\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input\n            type=\"email\"\n            matInput\n            formControlName=\"email\"\n            placeholder=\"Ex. pat@example.com\"\n          />\n          <button\n            *ngIf=\"form.controls['email'].value\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"form.controls['email'].setValue('')\"\n          >\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-error\n            *ngIf=\"\n              form.controls['email'].hasError('email') &&\n              !form.controls['email'].hasError('required')\n            \"\n          >\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input\n            type=\"password\"\n            matInput\n            formControlName=\"password\"\n            placeholder=\"Enter your password\"\n          />\n          <button\n            *ngIf=\"form.controls['password'].value\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"form.controls['password'].setValue('')\"\n          >\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-error\n            *ngIf=\"\n              (form.controls['password'].hasError('minLength') ||\n                form.controls['password'].hasError('maxLength')) &&\n              !form.controls['password'].hasError('required')\n            \"\n          >\n            Password should contain from 2 to 30 symbols\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['password'].hasError('required')\">\n            Password is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </form>\n    </mat-tab>\n    <mat-tab label=\"Зарегистрироваться\">\n      <form [formGroup]=\"form\">\n        <mat-form-field>\n          <mat-label>Username</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            formControlName=\"username\"\n            placeholder=\"Enter your username\"\n          />\n          <button\n            *ngIf=\"form.controls['username'].value\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"form.controls['username'].setValue('')\"\n          >\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-error\n            *ngIf=\"\n              (form.controls['username'].hasError('minLength') ||\n                form.controls['username'].hasError('maxLength')) &&\n              !form.controls['username'].hasError('required')\n            \"\n          >\n            Username should contain from 2 to 30 symbols\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n            Username is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input\n            type=\"email\"\n            matInput\n            formControlName=\"email\"\n            placeholder=\"Ex. pat@example.com\"\n          />\n          <button\n            *ngIf=\"form.controls['email'].value\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"form.controls['email'].setValue('')\"\n          >\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-error\n            *ngIf=\"\n              form.controls['email'].hasError('email') &&\n              !form.controls['email'].hasError('required')\n            \"\n          >\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input\n            type=\"password\"\n            matInput\n            formControlName=\"password\"\n            placeholder=\"Enter your password\"\n          />\n          <button\n            *ngIf=\"form.controls['password'].value\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"form.controls['password'].setValue('')\"\n          >\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-error\n            *ngIf=\"\n              (form.controls['password'].hasError('minLength') ||\n                form.controls['password'].hasError('maxLength')) &&\n              !form.controls['password'].hasError('required')\n            \"\n          >\n            Password should contain from 2 to 30 symbols\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['password'].hasError('required')\">\n            Password is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </form>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}