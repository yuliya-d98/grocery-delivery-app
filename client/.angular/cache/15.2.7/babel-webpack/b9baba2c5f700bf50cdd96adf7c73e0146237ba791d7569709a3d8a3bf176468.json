{"ast":null,"code":"import { PLATFORM_ID } from \"@angular/core\";\nimport { LoginModalComponent } from \"../login-modal/login-modal.component\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/badge\";\nimport * as i6 from \"@angular/material/slide-toggle\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/toolbar\";\nexport class AppHeaderComponent {\n  constructor(dialog, platformId, appBaseHref) {\n    // console.log(this.platformId); // browser\n    // console.log(isPlatformServer(this.platformId)); // false\n    // console.log(appBaseHref); // null\n    this.dialog = dialog;\n    this.platformId = platformId;\n    this.isDarkMode = false;\n    this.listenerHandler = event => {\n      this.isDarkMode = event.matches;\n      this.changeMode();\n    };\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", this.listenerHandler);\n  }\n  changeMode() {\n    const bodyTag = document.querySelector(\"body\");\n    if (this.isDarkMode) {\n      if (!bodyTag.classList.contains(\"dark-mode\")) {\n        bodyTag.classList.add(\"dark-mode\");\n      }\n    } else {\n      bodyTag.classList.remove(\"dark-mode\");\n    }\n  }\n  openLoginModal() {\n    this.dialog.open(LoginModalComponent, {\n      disableClose: false,\n      maxWidth: \"400px\"\n    }).afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  ngOnDestroy() {\n    window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", this.listenerHandler);\n  }\n}\nAppHeaderComponent.ɵfac = function AppHeaderComponent_Factory(t) {\n  return new (t || AppHeaderComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(APP_BASE_HREF, 8));\n};\nAppHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppHeaderComponent,\n  selectors: [[\"app-app-header\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[\"color\", \"accent\", 1, \"app-header\"], [1, \"container\", \"app-header__container\"], [\"mat-button\", \"\", \"routerLink\", \"/\"], [1, \"app-header__navigation\"], [\"color\", \"primary\", 3, \"checked\", \"ngModel\", \"ngModelChange\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"app-header__navigation_btn\", 3, \"click\"], [\"aria-hidden\", \"false\"], [\"mat-stroked-button\", \"\", \"routerLink\", \"/favourites\", \"color\", \"primary\", \"matBadge\", \"15\", \"matBadgeColor\", \"warn\", 1, \"app-header__navigation_btn\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"matBadge\", \"25\", \"matBadgeColor\", \"warn\", 1, \"app-header__navigation_btn\"]],\n  template: function AppHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Mall\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"mat-slide-toggle\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AppHeaderComponent_Template_mat_slide_toggle_ngModelChange_5_listener($event) {\n        return ctx.isDarkMode = $event;\n      })(\"ngModelChange\", function AppHeaderComponent_Template_mat_slide_toggle_ngModelChange_5_listener() {\n        return ctx.changeMode();\n      });\n      i0.ɵɵtext(6, \" \\u041D\\u043E\\u0447\\u043D\\u043E\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AppHeaderComponent_Template_button_click_7_listener() {\n        return ctx.openLoginModal();\n      });\n      i0.ɵɵelementStart(8, \"mat-icon\", 6);\n      i0.ɵɵtext(9, \"person_outline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \" \\u0412\\u043E\\u0439\\u0442\\u0438 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7)(12, \"mat-icon\", 6);\n      i0.ɵɵtext(13, \"favorite_border\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \" \\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8)(16, \"mat-icon\", 6);\n      i0.ɵɵtext(17, \"shopping_cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" \\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430 \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.isDarkMode)(\"ngModel\", ctx.isDarkMode);\n    }\n  },\n  dependencies: [i2.RouterLink, i3.MatIcon, i4.MatAnchor, i4.MatButton, i5.MatBadge, i6.MatSlideToggle, i7.NgControlStatus, i7.NgModel, i8.MatToolbar],\n  styles: [\".app-header__container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 16px 0;\\n}\\n.app-header__navigation[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL3BhZ2UtbGF5b3V0L2NvbXBvbmVudHMvYXBwLWhlYWRlci9hcHAtaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0FBQUo7QUFHRTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUFESiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtaGVhZGVyIHtcclxuICAmX19jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxNnB4IDA7XHJcbiAgfVxyXG5cclxuICAmX19uYXZpZ2F0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6IDE2cHg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAKEA,WAAW,QACN,eAAe;AAEtB,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,aAAa,QAA0B,iBAAiB;;;;;;;;;;AAOjE,OAAM,MAAOC,kBAAkB;EAM7BC,YACUC,MAAiB,EACIC,UAAkB,EACZC,WAAmB;IAEtD;IACA;IACA;IANQ,WAAM,GAANF,MAAM;IACe,eAAU,GAAVC,UAAU;IAPzC,eAAU,GAAY,KAAK;IAC3B,oBAAe,GAAIE,KAA0B,IAAI;MAC/C,IAAI,CAACC,UAAU,GAAGD,KAAK,CAACE,OAAO;MAC/B,IAAI,CAACC,UAAU,EAAE;IACnB,CAAC;IAUCC,MAAM,CACHC,UAAU,CAAC,8BAA8B,CAAC,CAC1CC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,eAAe,CAAC;EACrD;EACAJ,UAAU;IACR,MAAMK,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAoB;IACjE,IAAI,IAAI,CAACT,UAAU,EAAE;MACnB,IAAI,CAACO,OAAO,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC5CJ,OAAO,CAACG,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;;KAErC,MAAM;MACLL,OAAO,CAACG,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;;EAEzC;EAEAC,cAAc;IACZ,IAAI,CAAClB,MAAM,CACRmB,IAAI,CAACvB,mBAAmB,EAAE;MACzBwB,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE;KACX,CAAC,CACDC,WAAW,EAAE,CACbC,SAAS,CAAEC,MAAM,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,kBAAkBF,MAAM,EAAE,CAAC;IACzC,CAAC,CAAC;EACN;EAEAG,WAAW;IACTpB,MAAM,CACHC,UAAU,CAAC,8BAA8B,CAAC,CAC1CoB,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAClB,eAAe,CAAC;EACxD;;AA9CWZ,kBAAkB;mBAAlBA,kBAAkB,2DAQnBH,WAAW,wBACXE,aAAa;AAAA;AATZC,kBAAkB;QAAlBA,kBAAkB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB/BC,sCAA+C;MAEdA,oBAAI;MAAAA,iBAAI;MACrCA,8BAAoC;MACuBA;QAAA;MAAA,EAAwB;QAAA,OAAkBC,gBAAY;MAAA,EAA9B;MAC/ED,qFACF;MAAAA,iBAAmB;MACnBA,iCAAsG;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MACnGD,mCAA8B;MAAAA,8BAAc;MAAAA,iBAAW;MACvDA,iDACF;MAAAA,iBAAS;MACTA,6BAOC;MAC+BA,gCAAe;MAAAA,iBAAW;MACxDA,yEACF;MAAAA,iBAAI;MACJA,kCAMC;MAC+BA,8BAAa;MAAAA,iBAAW;MACtDA,6DACF;MAAAA,iBAAS;;;MA3ByBA,eAAsB;MAAtBA,wCAAsB","names":["PLATFORM_ID","LoginModalComponent","APP_BASE_HREF","AppHeaderComponent","constructor","dialog","platformId","appBaseHref","event","isDarkMode","matches","changeMode","window","matchMedia","addEventListener","listenerHandler","bodyTag","document","querySelector","classList","contains","add","remove","openLoginModal","open","disableClose","maxWidth","afterClosed","subscribe","result","console","log","ngOnDestroy","removeEventListener","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\app-header\\app-header.component.ts","D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\app-header\\app-header.component.html"],"sourcesContent":["import {\n  Component,\n  Inject,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LoginModalComponent } from \"../login-modal/login-modal.component\";\nimport { APP_BASE_HREF, isPlatformServer } from \"@angular/common\";\n\n@Component({\n  selector: \"app-app-header\",\n  templateUrl: \"./app-header.component.html\",\n  styleUrls: [\"./app-header.component.scss\"],\n})\nexport class AppHeaderComponent implements OnDestroy {\n  isDarkMode: boolean = false;\n  listenerHandler = (event: MediaQueryListEvent) => {\n    this.isDarkMode = event.matches;\n    this.changeMode();\n  };\n  constructor(\n    private dialog: MatDialog,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_BASE_HREF) @Optional() appBaseHref: string\n  ) {\n    // console.log(this.platformId); // browser\n    // console.log(isPlatformServer(this.platformId)); // false\n    // console.log(appBaseHref); // null\n\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", this.listenerHandler);\n  }\n  changeMode() {\n    const bodyTag = document.querySelector(\"body\") as HTMLBodyElement;\n    if (this.isDarkMode) {\n      if (!bodyTag.classList.contains(\"dark-mode\")) {\n        bodyTag.classList.add(\"dark-mode\");\n      }\n    } else {\n      bodyTag.classList.remove(\"dark-mode\");\n    }\n  }\n\n  openLoginModal() {\n    this.dialog\n      .open(LoginModalComponent, {\n        disableClose: false,\n        maxWidth: \"400px\",\n      })\n      .afterClosed()\n      .subscribe((result) => {\n        console.log(`Dialog result: ${result}`);\n      });\n  }\n\n  ngOnDestroy() {\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .removeEventListener(\"change\", this.listenerHandler);\n  }\n}\n","<mat-toolbar color=\"accent\" class=\"app-header\">\n  <div class=\"container app-header__container\">\n    <a mat-button routerLink=\"/\">Mall</a>\n    <div class=\"app-header__navigation\">\n      <mat-slide-toggle color=\"primary\" [checked]=\"isDarkMode\" [(ngModel)]=\"isDarkMode\" (ngModelChange)=\"changeMode()\">\n        Ночной режим\n      </mat-slide-toggle>\n      <button mat-flat-button color=\"primary\" class=\"app-header__navigation_btn\" (click)=\"openLoginModal()\">\n        <mat-icon aria-hidden=\"false\">person_outline</mat-icon>\n        Войти\n      </button>\n      <a\n        mat-stroked-button\n        routerLink=\"/favourites\"\n        color=\"primary\"\n        class=\"app-header__navigation_btn\"\n        matBadge=\"15\"\n        matBadgeColor=\"warn\"\n      >\n        <mat-icon aria-hidden=\"false\">favorite_border</mat-icon>\n        Избранное\n      </a>\n      <button\n        mat-stroked-button\n        color=\"primary\"\n        class=\"app-header__navigation_btn\"\n        matBadge=\"25\"\n        matBadgeColor=\"warn\"\n      >\n        <mat-icon aria-hidden=\"false\">shopping_cart</mat-icon>\n        Корзина\n      </button>\n    </div>\n  </div>\n</mat-toolbar>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}