{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, Optional, PLATFORM_ID } from \"@angular/core\";\nimport { LoginModalComponent } from \"../login-modal/login-modal.component\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nlet AppHeaderComponent = class AppHeaderComponent {\n  constructor(dialog, platformId, appBaseHref) {\n    // console.log(this.platformId); // browser\n    // console.log(isPlatformServer(this.platformId)); // false\n    // console.log(appBaseHref); // null\n    this.dialog = dialog;\n    this.platformId = platformId;\n    this.isDarkMode = false;\n    this.listenerHandler = event => {\n      this.isDarkMode = event.matches;\n      this.changeMode();\n    };\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", this.listenerHandler);\n  }\n  changeMode() {\n    const bodyTag = document.querySelector(\"body\");\n    if (this.isDarkMode) {\n      if (!bodyTag.classList.contains(\"dark-mode\")) {\n        bodyTag.classList.add(\"dark-mode\");\n      }\n    } else {\n      bodyTag.classList.remove(\"dark-mode\");\n    }\n  }\n  openLoginModal() {\n    this.dialog.open(LoginModalComponent, {\n      disableClose: false,\n      maxWidth: \"400px\"\n    }).afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  ngOnDestroy() {\n    window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", this.listenerHandler);\n  }\n};\nAppHeaderComponent = __decorate([Component({\n  selector: \"app-app-header\",\n  templateUrl: \"./app-header.component.html\",\n  styleUrls: [\"./app-header.component.scss\"]\n}), __param(1, Inject(PLATFORM_ID)), __param(2, Inject(APP_BASE_HREF)), __param(2, Optional())], AppHeaderComponent);\nexport { AppHeaderComponent };","map":{"version":3,"mappings":";AAAA,SACEA,SAAS,EACTC,MAAM,EAENC,QAAQ,EACRC,WAAW,QACN,eAAe;AAEtB,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,aAAa,QAA0B,iBAAiB;AAO1D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YACUC,MAAiB,EACIC,UAAkB,EACZC,WAAmB;IAEtD;IACA;IACA;IANQ,WAAM,GAANF,MAAM;IACe,eAAU,GAAVC,UAAU;IAPzC,eAAU,GAAY,KAAK;IAC3B,oBAAe,GAAIE,KAA0B,IAAI;MAC/C,IAAI,CAACC,UAAU,GAAGD,KAAK,CAACE,OAAO;MAC/B,IAAI,CAACC,UAAU,EAAE;IACnB,CAAC;IAUCC,MAAM,CACHC,UAAU,CAAC,8BAA8B,CAAC,CAC1CC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,eAAe,CAAC;EACrD;EACAJ,UAAU;IACR,MAAMK,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAoB;IACjE,IAAI,IAAI,CAACT,UAAU,EAAE;MACnB,IAAI,CAACO,OAAO,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC5CJ,OAAO,CAACG,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;;KAErC,MAAM;MACLL,OAAO,CAACG,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;;EAEzC;EAEAC,cAAc;IACZ,IAAI,CAAClB,MAAM,CACRmB,IAAI,CAACvB,mBAAmB,EAAE;MACzBwB,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE;KACX,CAAC,CACDC,WAAW,EAAE,CACbC,SAAS,CAAEC,MAAM,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,kBAAkBF,MAAM,EAAE,CAAC;IACzC,CAAC,CAAC;EACN;EAEAG,WAAW;IACTpB,MAAM,CACHC,UAAU,CAAC,8BAA8B,CAAC,CAC1CoB,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAClB,eAAe,CAAC;EACxD;CACD;AA/CYZ,kBAAkB,eAL9BN,SAAS,CAAC;EACTqC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,EASGC,iBAAM,CAACrC,WAAW,CAAC,GACnBqC,iBAAM,CAACnC,aAAa,CAAC,GAAEmC,mBAAQ,EAAE,IATzBlC,kBAAkB,CA+C9B;SA/CYA,kBAAkB","names":["Component","Inject","Optional","PLATFORM_ID","LoginModalComponent","APP_BASE_HREF","AppHeaderComponent","constructor","dialog","platformId","appBaseHref","event","isDarkMode","matches","changeMode","window","matchMedia","addEventListener","listenerHandler","bodyTag","document","querySelector","classList","contains","add","remove","openLoginModal","open","disableClose","maxWidth","afterClosed","subscribe","result","console","log","ngOnDestroy","removeEventListener","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\app-header\\app-header.component.ts"],"sourcesContent":["import {\n  Component,\n  Inject,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LoginModalComponent } from \"../login-modal/login-modal.component\";\nimport { APP_BASE_HREF, isPlatformServer } from \"@angular/common\";\n\n@Component({\n  selector: \"app-app-header\",\n  templateUrl: \"./app-header.component.html\",\n  styleUrls: [\"./app-header.component.scss\"],\n})\nexport class AppHeaderComponent implements OnDestroy {\n  isDarkMode: boolean = false;\n  listenerHandler = (event: MediaQueryListEvent) => {\n    this.isDarkMode = event.matches;\n    this.changeMode();\n  };\n  constructor(\n    private dialog: MatDialog,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_BASE_HREF) @Optional() appBaseHref: string\n  ) {\n    // console.log(this.platformId); // browser\n    // console.log(isPlatformServer(this.platformId)); // false\n    // console.log(appBaseHref); // null\n\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", this.listenerHandler);\n  }\n  changeMode() {\n    const bodyTag = document.querySelector(\"body\") as HTMLBodyElement;\n    if (this.isDarkMode) {\n      if (!bodyTag.classList.contains(\"dark-mode\")) {\n        bodyTag.classList.add(\"dark-mode\");\n      }\n    } else {\n      bodyTag.classList.remove(\"dark-mode\");\n    }\n  }\n\n  openLoginModal() {\n    this.dialog\n      .open(LoginModalComponent, {\n        disableClose: false,\n        maxWidth: \"400px\",\n      })\n      .afterClosed()\n      .subscribe((result) => {\n        console.log(`Dialog result: ${result}`);\n      });\n  }\n\n  ngOnDestroy() {\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .removeEventListener(\"change\", this.listenerHandler);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}