{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction LoginModalComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function LoginModalComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.form.controls[\"email\"].setValue(\"\"));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginModalComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginModalComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginModalComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = this.formBuilder.group({\n      username: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(30)]]\n    });\n  }\n}\nLoginModalComponent.ɵfac = function LoginModalComponent_Factory(t) {\n  return new (t || LoginModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginModalComponent,\n  selectors: [[\"app-login-modal\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[1, \"login-modal\"], [3, \"formGroup\"], [1, \"example-full-width\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Ex. pat@example.com\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n  template: function LoginModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵtemplate(6, LoginModalComponent_button_6_Template, 3, 0, \"button\", 4);\n      i0.ɵɵtemplate(7, LoginModalComponent_mat_error_7_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(8, LoginModalComponent_mat_error_8_Template, 4, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"email\") && !ctx.form.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].hasError(\"required\"));\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatIcon, i4.MatIconButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;ICQ7DC,iCAMC;IADCA;MAAAA;MAAA;MAAA,OAASA,oCAAc,OAAO,WAAW,EAAE,CAAC;IAAA,EAAC;IAE7CA,gCAAU;IAAAA,qBAAK;IAAAA,iBAAW;;;;;IAE5BA,iCAKC;IACCA,oDACF;IAAAA,iBAAY;;;;;IACZA,iCAA+D;IAC7DA,0BAAS;IAAAA,8BAAQ;IAAAA,wBAAQ;IAAAA,iBAAS;;;ADnB1C,OAAM,MAAOC,mBAAmB;EAa9BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAZ/B,SAAI,GAAc,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACvCC,QAAQ,EAAE,CACR,EAAE,EACF,CAACN,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EAAER,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CAAC,CACzE;MACDC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CACR,EAAE,EACF,CAACX,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EAAER,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CAAC;KAE3E,CAAC;EAE6C;;AAbpCP,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCf,8BAAyB;MAGRA,qBAAK;MAAAA,iBAAY;MAC5BA,2BAKE;MACFA,0EAQS;MACTA,gFAOY;MACZA,gFAEY;MACdA,iBAAiB;;;MA7BbA,eAAkB;MAAlBA,oCAAkB;MAUjBA,eAAkC;MAAlCA,uDAAkC;MASlCA,eAIT;MAJSA,uHAIT;MAGkBA,eAAiD;MAAjDA,sEAAiD","names":["Validators","i0","LoginModalComponent","constructor","formBuilder","group","username","required","minLength","maxLength","email","password","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.ts","D:\\projects\\grocery-delivery-app\\client\\src\\modules\\page-layout\\components\\login-modal\\login-modal.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { constructor } from \"zone.js\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-login-modal\",\n  templateUrl: \"./login-modal.component.html\",\n  styleUrls: [\"./login-modal.component.scss\"],\n})\nexport class LoginModalComponent {\n  form: FormGroup = this.formBuilder.group({\n    username: [\n      \"\",\n      [Validators.required, Validators.minLength(2), Validators.maxLength(30)],\n    ],\n    email: [\"\", [Validators.required, Validators.email]],\n    password: [\n      \"\",\n      [Validators.required, Validators.minLength(2), Validators.maxLength(30)],\n    ],\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n}\n","<div class=\"login-modal\">\n  <form [formGroup]=\"form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input\n        type=\"email\"\n        matInput\n        formControlName=\"email\"\n        placeholder=\"Ex. pat@example.com\"\n      />\n      <button\n        *ngIf=\"form.controls['email'].value\"\n        matSuffix\n        mat-icon-button\n        aria-label=\"Clear\"\n        (click)=\"form.controls['email'].setValue('')\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-error\n        *ngIf=\"\n          form.controls['email'].hasError('email') &&\n          !form.controls['email'].hasError('required')\n        \"\n      >\n        Please enter a valid email address\n      </mat-error>\n      <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n        Email is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}