{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MainHttpService {\n  constructor(http) {\n    this.http = http;\n  }\n  graphQlGetRequest(query, operationName) {\n    // in GET no mutations allowed, just query\n    return this.http.get(`http://localhost:4000/graphql`, {\n      params: {\n        query,\n        ...(operationName && {\n          operationName\n        })\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  graphQlPostRequest(query, variables, operationName) {\n    const body = {\n      query,\n      variables,\n      ...(operationName && {\n        operationName\n      })\n    };\n    return this.http.post(`http://localhost:4000/graphql`, body, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n}\nMainHttpService.ɵfac = function MainHttpService_Factory(t) {\n  return new (t || MainHttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nMainHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MainHttpService,\n  factory: MainHttpService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EACvCC,iBAAiB,CACfC,KAAa,EACbC,aAAsB;IAEtB;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAI,+BAA+B,EAAE;MACvDC,MAAM,EAAE;QACNH,KAAK;QACL,IAAIC,aAAa,IAAI;UAAEA;QAAa,CAAE;OACvC;MACDG,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CAAC;EACJ;EAEAC,kBAAkB,CAChBL,KAAa,EACbM,SAAkB,EAClBL,aAAsB;IAEtB,MAAMM,IAAI,GAAG;MACXP,KAAK;MACLM,SAAS;MACT,IAAIL,aAAa,IAAI;QAAEA;MAAa,CAAE;KACvC;IACD,OAAO,IAAI,CAACH,IAAI,CAACU,IAAI,CAAI,+BAA+B,EAAED,IAAI,EAAE;MAC9DH,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CAAC;EACJ;;AAjCWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAFd;AAAM","names":["MainHttpService","constructor","http","graphQlGetRequest","query","operationName","get","params","headers","graphQlPostRequest","variables","body","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\grocery-delivery-app\\client\\src\\shared\\services\\main.http.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MainHttpService {\n  constructor(private http: HttpClient) {}\n  graphQlGetRequest<T = any>(\n    query: string,\n    operationName?: string\n  ): Observable<T> {\n    // in GET no mutations allowed, just query\n    return this.http.get<T>(`http://localhost:4000/graphql`, {\n      params: {\n        query,\n        ...(operationName && { operationName }),\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  graphQlPostRequest<T = any>(\n    query: string,\n    variables?: Object,\n    operationName?: string\n  ): Observable<T> {\n    const body = {\n      query,\n      variables,\n      ...(operationName && { operationName }),\n    };\n    return this.http.post<T>(`http://localhost:4000/graphql`, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}